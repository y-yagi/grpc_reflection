# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: reflection.proto for package 'grpc.reflection.v1'
# Original file comments:
# Copyright 2016 The gRPC Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service exported by server reflection.  A more complete description of how
# server reflection works can be found at
# https://github.com/grpc/grpc/blob/master/doc/server-reflection.md
#
# The canonical version of this proto can be found at
# https://github.com/grpc/grpc-proto/blob/master/grpc/reflection/v1/reflection.proto
#

require 'grpc'
require_relative 'reflection_pb'

module Grpc
  module Reflection
    module V1
      module ServerReflection
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'grpc.reflection.v1.ServerReflection'

          # The reflection service is structured as a bidirectional stream, ensuring
          # all related requests go to a single server.
          rpc :ServerReflectionInfo, stream(::Grpc::Reflection::V1::ServerReflectionRequest), stream(::Grpc::Reflection::V1::ServerReflectionResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
